<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="web.dao.face.MenuCommunityDao">

	<!-- 게시글 조회용 SQL -->
	<sql id="selectBoard">
		SELECT 
		    board_no, writer_id, writer_nick, 
		    hit, menu, cate, title, content, location,
		    CAST(write_date AS DATE) AS write_date, 
		    (SELECT COUNT(*) FROM liketb R WHERE R.board_no = B.board_no) AS like_cnt
<!-- 		    (SELECT thumbnail_name FROM fileTB WHERE fileTB.board_no = B.board_no AND rownum = 1) AS thumbnail_name -->
		FROM board B
		<where>
			AND menu = #{menu }
			AND cate = #{cate }	
		</where>
	</sql>
	
	<!-- 검색 조건 조회용 SQL -->
	<sql id="searchCond">
	    <if test='selectSub =="title"'>
	        AND title LIKE '%' || #{searchText} || '%'
	    </if>
	    <if test='selectSub =="content"'> 
	        AND content LIKE '%' || #{searchText} || '%'
	    </if>
	    <if test='selectSub =="writerNick"'> 
	        AND writer_nick LIKE '%' || #{searchText} || '%'
	    </if>
   	    <if test='selectSub =="location"'> 
	        AND location LIKE '%' || #{searchText} || '%'
	    </if>
	</sql>
	
	<!-- 게시글 수 조회하여 페이징 처리 -->
	<select id="selectCntAll" resultType="int" parameterType="web.util.Paging">
		SELECT count(*) FROM (
			<include refid="selectBoard" />
			<include refid="searchCond" />
		)
	</select>
	
	<!-- 해당 메뉴 게시글 조회 -->
	<select id="selectAll" resultType="Map" parameterType="web.util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				<include refid="selectBoard"/>
				ORDER BY board_no DESC
          	) B
      	) WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>

	<!-- 검색된 게시글 조회 -->
	<select id="selectSearch" resultType="Map" parameterType="web.util.Paging">
	    SELECT * FROM (
	        SELECT rownum rnum, B.* FROM (
	            SELECT 
	                board_no, writer_id, writer_nick, 
	                hit, menu, cate, title, content, location, 
	                CAST(write_date AS DATE) AS write_date, 
	                (SELECT COUNT(*) FROM liketb R WHERE R.board_no = B.board_no) AS like_cnt
<!-- 	                (SELECT thumbnail_name FROM fileTB WHERE fileTB.board_no = B.board_no AND rownum = 1) AS thumbnail_name -->
	            FROM board B
	            WHERE
	                menu = #{menu}
	                AND cate = #{cate}
	                <if test='selectSub =="title"'>
	                    AND title LIKE '%' || #{searchText} || '%'
	                </if>
	                <if test='selectSub =="content"'> 
	                    AND content LIKE '%' || #{searchText} || '%'
	                </if>
	                <if test='selectSub =="writerNick"'> 
	                    AND writer_nick LIKE '%' || #{searchText} || '%'
	                </if>
                  	<if test='selectSub =="location"'> 
	     			   AND location LIKE '%' || #{searchText} || '%'
	  				</if>	
	            ORDER BY board_no DESC
	        ) B
	    ) WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateHit" parameterType="Board">
		UPDATE board
		<set>
			hit = hit + 1,
		</set>
		<where>
			AND board_no = #{boardNo }
		</where>
	</update>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectByBoardNo" resultType="Board" parameterType="Board">
		SELECT
			board_no, writer_id, writer_nick
			, write_date, hit, menu, cate
			, title, content, location
		FROM board
		<where>
			board_no = #{boardNo }
		</where>	    
	</select>
	
	<!-- 게시글 삽입 -->
    <insert id="insertBoard" parameterType="Board">
    	<selectKey resultType="int" order="BEFORE" keyProperty="boardNo">
    		SELECT board_seq.nextval FROM dual
    	</selectKey>
    		INSERT INTO board(board_no, menu, cate, writer_id, writer_nick, title, price, content, location)
    		VALUES ( #{boardNo}, #{menu}, #{cate}, #{writerId}, #{writerNick}, #{title}, #{price}, #{content}, #{location} )
    </insert>
    
    <!-- 게시글 파일 삽입 -->
    <insert id="insertFile" parameterType="FileTb">
    	<selectKey resultType="int" order="BEFORE" keyProperty="fileNo">
    		SELECT fileTb_seq.nextval FROM dual
    	</selectKey>
    	INSERT INTO fileTb( file_no, origin_name, stored_name, thumbnail_name, file_type, board_no)
    	VALUES( #{fileNo}, #{originName}, #{storedName}, #{thumbnailName}, #{fileType}, #{boardNo} )
    </insert>
    
    <!-- 게시글 파일 조회, 목록용 -->
   	<select id="selectFileByBoardNo" resultType="FileTb" parameterType="Board">
		SELECT
			file_no, board_no, origin_name, stored_name, thumbnail_name
		FROM filetb
		<where>
			board_no = #{boardNo}
		</where>
	</select>
	
	<!-- 게시글 파일 조회, 다운로드용 -->
	<select id="selectFileByFileNo" resultType="FileTb" parameterType="FileTb">
		SELECT
			file_no, board_no, origin_name, stored_name, thumbnail_name
		FROM filetb
		<where>
			file_no = #{fileNo}
		</where>
	</select>
	
	<!-- 사용자 추천수 유무 조회 -->
	<select id="selectCntLike" resultType="int" parameterType="Like">
		SELECT count(like_no) FROM liketb
		<where>
			AND like_id = #{likeId}
			AND board_no = #{boardNo}
		</where>
	</select>
	
	<!-- 추천 적용 -->
	<insert id="insertLike" parameterType="Like">
		INSERT INTO liketb ( like_no, like_id, board_no)
		VALUES ( liketb_seq.nextval, #{likeId}, #{boardNo} )
	</insert>
	
	<!-- 추천 취소 -->
	<delete id="deleteLike" parameterType="Like">
		DELETE liketb
		<where>
			AND like_id = #{likeId}
			AND board_no = #{boardNo}
		</where>
	</delete>		
	
	<!-- 총 추천수 조회 -->
	<select id="selectTotalCntLike" resultType="int" parameterType="Like">
		SELECT COUNT(like_no) FROM liketb
		<where>
			AND board_no = #{boardNo}
		</where>
	</select>    

	<!-- 댓글 삽입 -->
	<insert id="insertComment" parameterType="Comment">
		INSERT INTO commentTB ( CMT_NO, BOARD_NO, WRITER_ID, WRITER_NICK, CONTENT)
		VALUES ( commentTB_seq.nextval, #{boardNo }, #{writerId }, #{writerNick }, #{content } )
	</insert>
	
	<!-- 댓글 조회 -->
	<select id="selectAllComment" resultType="Map" parameterType="Comment">
		SELECT * FROM (
		    SELECT rownum rnum, B.*, uf.THUMBNAIL_NAME 
		    FROM (
		        SELECT
		            cmt_no, board_no, writer_id, writer_nick, content,
		            CAST(write_date AS DATE) AS "writeDate"
		        FROM commentTb
		        WHERE board_no = #{boardNo}
		        ORDER BY write_date DESC
		    ) B
		    LEFT JOIN user_file uf ON B.writer_id = uf.id
		)
		ORDER BY rnum
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteComment" parameterType="Comment">
		DELETE FROM commentTB
		<where>
			AND	cmt_no = #{cmtNo }
			AND board_no = #{boardNo }
		</where>
	</delete>
	
		<!-- 게시글 삭제  -->
	<delete id="deleteBoard" parameterType="Board">
		DELETE board
		<where>
			AND board_no = #{boardNo}
			AND writer_id = #{writerId}
		</where>
	</delete>
	
	<!-- 게시판 수정 -->
	<update id="updateBoard" parameterType="Board">
		UPDATE board
		SET title = #{title } 
		, content = #{content } 
		
		<where> 
			board_no = #{boardNo }
		</where>
	</update>
	
	<!-- 여러개 파일 삭제 -->
	<delete id="deleteFiles" parameterType="int[]">
		DELETE fileTb
		<where>
		file_no IN
		<foreach collection="array" item="no" open="(" close=")" separator=","> #{no } </foreach>
		</where>
	</delete> 
	
  	<select id="getCntCmt" resultType="int" parameterType="String" >
  		SELECT count(cmt_no)
  		FROM commenttb
  		WHERE board_no = #{boardNo}
  	</select>
	
</mapper>
